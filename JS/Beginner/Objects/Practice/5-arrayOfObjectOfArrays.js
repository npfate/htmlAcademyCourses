// Массив ключей
var arr1 = ['имя', 'любимый цвет', 'любимое блюдо'];

// Массив значений
var arr2 = [
  ['Василий', 'красный', 'борщ'],
  ['Мария'],
  ['Иннокентий', 'жёлтый', 'пельмени', '18', 'Азовское']
];

var getData = function(arrayKeys, arrayData) {
  var newObjArray = [];
  
  for (var i = 0; i < arrayData.length; i++) {
    var newObject = {};
    
    for (var j = 0; j < arrayKeys.length; j++) {
      if (arrayData[i][j]) {
        newObject[arrayKeys[j]] = arrayData[i][j];
      }
    }
    
    newObjArray.push(newObject);
  }
  
  return newObjArray;
}

getData(arr1, arr2);

/*
[
  {
    'имя': 'Василий',
    'любимый цвет': 'красный',
    'любимое блюдо': 'борщ'
  },
  {
    'имя': 'Мария'
  },
  {
    'имя': 'Иннокентий',
    'любимый цвет': 'жёлтый',
    'любимое блюдо': 'пельмени'
  }
];
*/


/*

Создайте функцию getData. У неё должно быть два параметра. Первый параметр — массив с ключами. Второй — массив с массивами данных.

Функция должна собрать объект для каждого массива значений. Каждый из этих объектов должен быть записан в массив. Именно этот массив с объектами должна вернуть функция getData.

Каждому элементу из массива ключей подходит элемент с таким же индексом в массиве значений.

Есть один нюанс: значений может оказаться больше или меньше, чем ключей.

Если значений не хватает, то создавать пустой ключ не надо. А если значений больше, то их не нужно включать в объект — для них нет ключей.

*/
