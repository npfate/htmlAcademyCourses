var calculateRoots = function (a, b, c) {
  var d = b * b - 4 * a * c;  
  
  if (d < 0) {
    var root = 'Корней нет';
  }
  if (d === 0) {
    var root = 'Корень равен ' + (-b / (2 * a));  
  }
  if (d > 0) {
    var x1 = ((-b + Math.sqrt(d)) / (2 * a));
    var x2 = ((-b - Math.sqrt(d)) / (2 * a));
    var root = 'Первый корень равен ' + x1 + ', второй корень равен ' + x2;
  }

  return root;
}

calculateRoots(1, 2, 1);


/* Техническое задание

Мяу! Напиши функцию calculateRoots, которая будет считать корни через дискриминант.

Формула дискриминанта выглядит так: b * b - 4 * a * c. Функция должна принимать на вход три параметра: a, b, c. Это коэффициенты из формулы дискриминанта.

Если полученное число меньше 0, функция должна возвращать строку 'Корней нет'.

Если результат равен 0, корень в уравнении один. Функция должна возвращать строку 'Корень равен ' + найденный корень. Формула корня в этом случае такая: -b / (2 * a).

А вот если дискриминант больше 0, корня два. Придётся посчитать каждый и добавить результат в строку. Формула для первого корня: (-b + √D) / (2 * a). Формула для второго корня: (-b - √D) / (2 * a). Функция должна возвращать строку 'Первый корень равен ' + первый корень + ', второй корень равен ' + второй корень.

*/
